class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next


class Soulution:
    def reverse(self, head: ListNode):  # 一个循环从后向前指
        pre_node = ListNode(None)
        cur_node = head
        while (cur_node != None):
            temp = cur_node.next
            cur_node.next = pre_node
            pre_node = cur_node
            cur_node = temp
        return pre_node
if __name__ == '__main__':
    Node1 = ListNode(1, ListNode(2, ListNode(6, ListNode(3, ListNode(4, ListNode(5, ListNode(6, None)))))))
    print(Soulution().reverse(Node1))
