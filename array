public class numSquare {
    /**
     * @param nums
     * @return
     * @describe： 
     * 1.数组元素平方和数组元素绝对值排序一样
     * 2.非递减的意思：递增有重复数据
     * 3.解体方法：除了暴力求解的方法，双指针+空间换时间，
     * 4.思想：双指针从两边向中间遍历原数组，同时比较两者平方后值的大小，将较大者逆序存放在新开辟的数组空间中。
     */
    public int[] sortedSquares(int[] nums) {
        int l = 0;
        int r = nums.length - 1;
        int[] res = new int[nums.length];
        int k = res.length - 1;
        while (l <= r) {
            if (nums[l] * nums[l] > nums[r] * nums[r]) {
                res[k--] = nums[l] * nums[l++];
            } else {
                res[k--] = nums[r] * nums[r--];
            }
        }
        return res;
    }

    public static void main(String[] args) {
        int nums[] = {-4, -1, 0, 3, 10};
        numSquare numSquare = new numSquare();
        numSquare.sortedSquares(nums);
    }
}
